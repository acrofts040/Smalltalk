;;;;;;;;;;;;;;;;;;; COMP 105 SMALL ASSIGNMENT ;;;;;;;;;;;;;;;
;; adt.txt
;; COMP 105 - hw9 small
;; Fall 2020

;; Name: Ann Marie Burke (aburke04)
;; Partner: Andrew Crofts



NOTES: abstraction function and invariant

Exercise 37:

NatZero: 
	ivars: n/a (any need for instance variables was avoided through dyammic dispatch)

NatNonzero: 
	ivars: 
		b: an integer representing the base of the number system to be used. 
			Will be used to mod and divide values to obtain different digits
			of the number. 
		d: integer representing the last digit of the natural number. In practice,
			d is the mod of the natural number when it is modded by base.
		m: a natural number representing the rest of the digits other than the smallest
			 of the number (d) . In practice, it is the natural number divided by the base. 


We ended up using the subclass representation for its ease in implementation and,
	vitally, in debugging. With the sublass rep. there were no issues trying 
	to reconcile a data structure such as a list with the very different rep.
	of natural. Since dynamic dispact naturally avoids case analysis, functions
	were short and economical, allowing for a smooth process. The debugging phase 
	went well as we were often able to extremely easily identify issues through 
	the tracing functionality. Overall, we have no regrets. 



Exercise 38:

	LargeInteger: 
		ivars: 
			magnitude: a magnitude object that represents the numerical size of the 
						integer (distance from zero) (regardless of sign). 


	LargePositiveInteger: 
		ivars: n/a

	LargeNegativeInteger:
		ivars: n/a


